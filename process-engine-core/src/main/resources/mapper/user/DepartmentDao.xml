<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.touchealth.platform.processengine.dao.user.DepartmentDao">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.touchealth.platform.processengine.entity.user.Department">
        <result column="id" property="id"/>
        <result column="created_time" property="createdTime"/>
        <result column="created_by" property="createdBy"/>
        <result column="updated_time" property="updatedTime"/>
        <result column="updated_by" property="updatedBy"/>
        <result column="deleted_flag" property="deletedFlag"/>
        <result column="channel_no" property="channelNo"/>
        <result column="code" property="code"/>
        <result column="name" property="name"/>
    </resultMap>

    <resultMap id="departmentDtoResultMap" type="com.touchealth.platform.processengine.pojo.dto.user.DepartmentDto">
        <result column="id" property="departmentId"/>
        <result column="code" property="departmentCode"/>
        <result column="name" property="departmentName"/>
        <result column="type" property="type"/>
        <collection property="postJobs" javaType="java.util.List"
                    ofType="com.touchealth.platform.processengine.pojo.dto.user.PostJobDto">
            <result column="pj_id" property="postJobId"/>
            <result column="pj_code" property="postJobCode"/>
            <result column="pj_name" property="postJobName"/>
            <result column="pj_dept_id" property="departmentId"/>
        </collection>
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        id,
        created_time,
        created_by,
        updated_time,
        updated_by,
        deleted_flag,
        channel_no, code, name
    </sql>

    <!-- 根据部门ID和岗位ID查询渠道下的部门岗位列表 -->
    <select id="listByDeptIdAndPostJobId" resultMap="departmentDtoResultMap">
        select
        d.id,
        d.code,
        d.type,
        d.name,
        pj.id pj_id,
        pj.code pj_code,
        pj.name pj_name,
        pj.dept_id pj_dept_id
        from department d
        left join post_job pj
        on d.id = pj.dept_id and pj.deleted_flag = 0
        where
        d.deleted_flag = 0
        and d.channel_no = #{channelNo}
        <if test="deptId != null">
            and d.id = #{deptId}
        </if>
        <if test="type != null">
            and d.type = #{type}
        </if>
        <if test="postJobId != null">
            and pj.id = #{postJobId}
        </if>
        order by d.created_time desc
        limit #{start}, #{size}
    </select>
    <select id="listByDeptIdAndPostJobIdCount" resultType="java.lang.Long">
        select
        count(d.id)
        from department d
        left join post_job pj
        on d.id = pj.dept_id and pj.deleted_flag = 0
        where
        d.deleted_flag = 0
        and d.channel_no = #{channelNo}
        <if test="deptId != null">
            and d.id = #{deptId}
        </if>
        <if test="postJobId != null">
            and pj.id = #{postJobId}
        </if>
        <if test="type != null">
            and d.type = #{type}
        </if>
    </select>

    <select id="countByDeptIdAndType" resultType="java.lang.Long">
        select
        count(d.id)
        from department d
        left join post_job pj
        on d.id = pj.dept_id and pj.deleted_flag = 0
        where
        d.deleted_flag = 0
        <if test="deptId != null">
            and d.id = #{deptId}
        </if>
        <if test="type != null">
            and d.type = #{type}
        </if>
    </select>

    <!-- 根据部门ID和类型查询部门下的岗位列表 -->
    <select id="listByDeptIdAndType" resultMap="departmentDtoResultMap">
        select
        d.id,
        d.code,
        d.name,
        pj.id pj_id,
        pj.code pj_code,
        pj.name pj_name,
        pj.dept_id pj_dept_id
        from department d
        left join post_job pj
        on d.id = pj.dept_id and pj.deleted_flag = 0
        where
        d.deleted_flag = 0
        <if test="deptId != null">
            and d.id = #{deptId}
        </if>
        <if test="type != null">
            and d.type = #{type}
        </if>
        order by d.created_time desc
        limit #{start}, #{size}
    </select>
</mapper>
